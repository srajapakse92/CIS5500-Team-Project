{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nvar _excluded = [\"name\"];\nimport toChildrenArray from \"rc-util/es/Children/toArray\";\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport FieldContext, { HOOK_MARK } from './FieldContext';\nimport { toArray } from './utils/typeUtil';\nimport { validateRules } from './utils/validateUtil';\nimport { containsNamePath, defaultGetValueFromEvent, getNamePath, getValue } from './utils/valueUtil';\nvar EMPTY_ERRORS = [];\n\nfunction requireUpdate(shouldUpdate, prev, next, prevValue, nextValue, info) {\n  if (typeof shouldUpdate === 'function') {\n    return shouldUpdate(prev, next, 'source' in info ? {\n      source: info.source\n    } : {});\n  }\n\n  return prevValue !== nextValue;\n} // We use Class instead of Hooks here since it will cost much code by using Hooks.\n\n\nvar Field = /*#__PURE__*/function (_React$Component) {\n  _inherits(Field, _React$Component);\n\n  var _super = _createSuper(Field);\n  /**\n   * Follow state should not management in State since it will async update by React.\n   * This makes first render of form can not get correct state value.\n   */\n\n  /**\n   * Mark when touched & validated. Currently only used for `dependencies`.\n   * Note that we do not think field with `initialValue` is dirty\n   * but this will be by `isFieldDirty` func.\n   */\n  // ============================== Subscriptions ==============================\n\n\n  function Field(props) {\n    var _this;\n\n    _classCallCheck(this, Field);\n\n    _this = _super.call(this, props); // Register on init\n\n    _this.state = {\n      resetCount: 0\n    };\n    _this.cancelRegisterFunc = null;\n    _this.mounted = false;\n    _this.touched = false;\n    _this.dirty = false;\n    _this.validatePromise = null;\n    _this.prevValidating = void 0;\n    _this.errors = EMPTY_ERRORS;\n    _this.warnings = EMPTY_ERRORS;\n\n    _this.cancelRegister = function () {\n      var _this$props = _this.props,\n          preserve = _this$props.preserve,\n          isListField = _this$props.isListField,\n          name = _this$props.name;\n\n      if (_this.cancelRegisterFunc) {\n        _this.cancelRegisterFunc(isListField, preserve, getNamePath(name));\n      }\n\n      _this.cancelRegisterFunc = null;\n    };\n\n    _this.getNamePath = function () {\n      var _this$props2 = _this.props,\n          name = _this$props2.name,\n          fieldContext = _this$props2.fieldContext;\n      var _fieldContext$prefixN = fieldContext.prefixName,\n          prefixName = _fieldContext$prefixN === void 0 ? [] : _fieldContext$prefixN;\n      return name !== undefined ? [].concat(_toConsumableArray(prefixName), _toConsumableArray(name)) : [];\n    };\n\n    _this.getRules = function () {\n      var _this$props3 = _this.props,\n          _this$props3$rules = _this$props3.rules,\n          rules = _this$props3$rules === void 0 ? [] : _this$props3$rules,\n          fieldContext = _this$props3.fieldContext;\n      return rules.map(function (rule) {\n        if (typeof rule === 'function') {\n          return rule(fieldContext);\n        }\n\n        return rule;\n      });\n    };\n\n    _this.refresh = function () {\n      if (!_this.mounted) return;\n      /**\n       * Clean up current node.\n       */\n\n      _this.setState(function (_ref) {\n        var resetCount = _ref.resetCount;\n        return {\n          resetCount: resetCount + 1\n        };\n      });\n    };\n\n    _this.triggerMetaEvent = function (destroy) {\n      var onMetaChange = _this.props.onMetaChange;\n      onMetaChange === null || onMetaChange === void 0 ? void 0 : onMetaChange(_objectSpread(_objectSpread({}, _this.getMeta()), {}, {\n        destroy: destroy\n      }));\n    };\n\n    _this.onStoreChange = function (prevStore, namePathList, info) {\n      var _this$props4 = _this.props,\n          shouldUpdate = _this$props4.shouldUpdate,\n          _this$props4$dependen = _this$props4.dependencies,\n          dependencies = _this$props4$dependen === void 0 ? [] : _this$props4$dependen,\n          onReset = _this$props4.onReset;\n      var store = info.store;\n\n      var namePath = _this.getNamePath();\n\n      var prevValue = _this.getValue(prevStore);\n\n      var curValue = _this.getValue(store);\n\n      var namePathMatch = namePathList && containsNamePath(namePathList, namePath); // `setFieldsValue` is a quick access to update related status\n\n      if (info.type === 'valueUpdate' && info.source === 'external' && prevValue !== curValue) {\n        _this.touched = true;\n        _this.dirty = true;\n        _this.validatePromise = null;\n        _this.errors = EMPTY_ERRORS;\n        _this.warnings = EMPTY_ERRORS;\n\n        _this.triggerMetaEvent();\n      }\n\n      switch (info.type) {\n        case 'reset':\n          if (!namePathList || namePathMatch) {\n            // Clean up state\n            _this.touched = false;\n            _this.dirty = false;\n            _this.validatePromise = null;\n            _this.errors = EMPTY_ERRORS;\n            _this.warnings = EMPTY_ERRORS;\n\n            _this.triggerMetaEvent();\n\n            onReset === null || onReset === void 0 ? void 0 : onReset();\n\n            _this.refresh();\n\n            return;\n          }\n\n          break;\n\n        /**\n         * In case field with `preserve = false` nest deps like:\n         * - A = 1 => show B\n         * - B = 1 => show C\n         * - Reset A, need clean B, C\n         */\n\n        case 'remove':\n          {\n            if (shouldUpdate) {\n              _this.reRender();\n\n              return;\n            }\n\n            break;\n          }\n\n        case 'setField':\n          {\n            if (namePathMatch) {\n              var data = info.data;\n\n              if ('touched' in data) {\n                _this.touched = data.touched;\n              }\n\n              if ('validating' in data && !('originRCField' in data)) {\n                _this.validatePromise = data.validating ? Promise.resolve([]) : null;\n              }\n\n              if ('errors' in data) {\n                _this.errors = data.errors || EMPTY_ERRORS;\n              }\n\n              if ('warnings' in data) {\n                _this.warnings = data.warnings || EMPTY_ERRORS;\n              }\n\n              _this.dirty = true;\n\n              _this.triggerMetaEvent();\n\n              _this.reRender();\n\n              return;\n            } // Handle update by `setField` with `shouldUpdate`\n\n\n            if (shouldUpdate && !namePath.length && requireUpdate(shouldUpdate, prevStore, store, prevValue, curValue, info)) {\n              _this.reRender();\n\n              return;\n            }\n\n            break;\n          }\n\n        case 'dependenciesUpdate':\n          {\n            /**\n             * Trigger when marked `dependencies` updated. Related fields will all update\n             */\n            var dependencyList = dependencies.map(getNamePath); // No need for `namePathMath` check and `shouldUpdate` check, since `valueUpdate` will be\n            // emitted earlier and they will work there\n            // If set it may cause unnecessary twice rerendering\n\n            if (dependencyList.some(function (dependency) {\n              return containsNamePath(info.relatedFields, dependency);\n            })) {\n              _this.reRender();\n\n              return;\n            }\n\n            break;\n          }\n\n        default:\n          // 1. If `namePath` exists in `namePathList`, means it's related value and should update\n          //      For example <List name=\"list\"><Field name={['list', 0]}></List>\n          //      If `namePathList` is [['list']] (List value update), Field should be updated\n          //      If `namePathList` is [['list', 0]] (Field value update), List shouldn't be updated\n          // 2.\n          //   2.1 If `dependencies` is set, `name` is not set and `shouldUpdate` is not set,\n          //       don't use `shouldUpdate`. `dependencies` is view as a shortcut if `shouldUpdate`\n          //       is not provided\n          //   2.2 If `shouldUpdate` provided, use customize logic to update the field\n          //       else to check if value changed\n          if (namePathMatch || (!dependencies.length || namePath.length || shouldUpdate) && requireUpdate(shouldUpdate, prevStore, store, prevValue, curValue, info)) {\n            _this.reRender();\n\n            return;\n          }\n\n          break;\n      }\n\n      if (shouldUpdate === true) {\n        _this.reRender();\n      }\n    };\n\n    _this.validateRules = function (options) {\n      // We should fixed namePath & value to avoid developer change then by form function\n      var namePath = _this.getNamePath();\n\n      var currentValue = _this.getValue(); // Force change to async to avoid rule OOD under renderProps field\n\n\n      var rootPromise = Promise.resolve().then(function () {\n        if (!_this.mounted) {\n          return [];\n        }\n\n        var _this$props5 = _this.props,\n            _this$props5$validate = _this$props5.validateFirst,\n            validateFirst = _this$props5$validate === void 0 ? false : _this$props5$validate,\n            messageVariables = _this$props5.messageVariables;\n\n        var _ref2 = options || {},\n            triggerName = _ref2.triggerName;\n\n        var filteredRules = _this.getRules();\n\n        if (triggerName) {\n          filteredRules = filteredRules.filter(function (rule) {\n            var validateTrigger = rule.validateTrigger;\n\n            if (!validateTrigger) {\n              return true;\n            }\n\n            var triggerList = toArray(validateTrigger);\n            return triggerList.includes(triggerName);\n          });\n        }\n\n        var promise = validateRules(namePath, currentValue, filteredRules, options, validateFirst, messageVariables);\n        promise.catch(function (e) {\n          return e;\n        }).then(function () {\n          var ruleErrors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : EMPTY_ERRORS;\n\n          if (_this.validatePromise === rootPromise) {\n            var _ruleErrors$forEach;\n\n            _this.validatePromise = null; // Get errors & warnings\n\n            var nextErrors = [];\n            var nextWarnings = [];\n            (_ruleErrors$forEach = ruleErrors.forEach) === null || _ruleErrors$forEach === void 0 ? void 0 : _ruleErrors$forEach.call(ruleErrors, function (_ref3) {\n              var warningOnly = _ref3.rule.warningOnly,\n                  _ref3$errors = _ref3.errors,\n                  errors = _ref3$errors === void 0 ? EMPTY_ERRORS : _ref3$errors;\n\n              if (warningOnly) {\n                nextWarnings.push.apply(nextWarnings, _toConsumableArray(errors));\n              } else {\n                nextErrors.push.apply(nextErrors, _toConsumableArray(errors));\n              }\n            });\n            _this.errors = nextErrors;\n            _this.warnings = nextWarnings;\n\n            _this.triggerMetaEvent();\n\n            _this.reRender();\n          }\n        });\n        return promise;\n      });\n      _this.validatePromise = rootPromise;\n      _this.dirty = true;\n      _this.errors = EMPTY_ERRORS;\n      _this.warnings = EMPTY_ERRORS;\n\n      _this.triggerMetaEvent(); // Force trigger re-render since we need sync renderProps with new meta\n\n\n      _this.reRender();\n\n      return rootPromise;\n    };\n\n    _this.isFieldValidating = function () {\n      return !!_this.validatePromise;\n    };\n\n    _this.isFieldTouched = function () {\n      return _this.touched;\n    };\n\n    _this.isFieldDirty = function () {\n      // Touched or validate or has initialValue\n      if (_this.dirty || _this.props.initialValue !== undefined) {\n        return true;\n      } // Form set initialValue\n\n\n      var fieldContext = _this.props.fieldContext;\n\n      var _fieldContext$getInte = fieldContext.getInternalHooks(HOOK_MARK),\n          getInitialValue = _fieldContext$getInte.getInitialValue;\n\n      if (getInitialValue(_this.getNamePath()) !== undefined) {\n        return true;\n      }\n\n      return false;\n    };\n\n    _this.getErrors = function () {\n      return _this.errors;\n    };\n\n    _this.getWarnings = function () {\n      return _this.warnings;\n    };\n\n    _this.isListField = function () {\n      return _this.props.isListField;\n    };\n\n    _this.isList = function () {\n      return _this.props.isList;\n    };\n\n    _this.isPreserve = function () {\n      return _this.props.preserve;\n    };\n\n    _this.getMeta = function () {\n      // Make error & validating in cache to save perf\n      _this.prevValidating = _this.isFieldValidating();\n      var meta = {\n        touched: _this.isFieldTouched(),\n        validating: _this.prevValidating,\n        errors: _this.errors,\n        warnings: _this.warnings,\n        name: _this.getNamePath()\n      };\n      return meta;\n    };\n\n    _this.getOnlyChild = function (children) {\n      // Support render props\n      if (typeof children === 'function') {\n        var meta = _this.getMeta();\n\n        return _objectSpread(_objectSpread({}, _this.getOnlyChild(children(_this.getControlled(), meta, _this.props.fieldContext))), {}, {\n          isFunction: true\n        });\n      } // Filed element only\n\n\n      var childList = toChildrenArray(children);\n\n      if (childList.length !== 1 || ! /*#__PURE__*/React.isValidElement(childList[0])) {\n        return {\n          child: childList,\n          isFunction: false\n        };\n      }\n\n      return {\n        child: childList[0],\n        isFunction: false\n      };\n    };\n\n    _this.getValue = function (store) {\n      var getFieldsValue = _this.props.fieldContext.getFieldsValue;\n\n      var namePath = _this.getNamePath();\n\n      return getValue(store || getFieldsValue(true), namePath);\n    };\n\n    _this.getControlled = function () {\n      var childProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _this$props6 = _this.props,\n          trigger = _this$props6.trigger,\n          validateTrigger = _this$props6.validateTrigger,\n          getValueFromEvent = _this$props6.getValueFromEvent,\n          normalize = _this$props6.normalize,\n          valuePropName = _this$props6.valuePropName,\n          getValueProps = _this$props6.getValueProps,\n          fieldContext = _this$props6.fieldContext;\n      var mergedValidateTrigger = validateTrigger !== undefined ? validateTrigger : fieldContext.validateTrigger;\n\n      var namePath = _this.getNamePath();\n\n      var getInternalHooks = fieldContext.getInternalHooks,\n          getFieldsValue = fieldContext.getFieldsValue;\n\n      var _getInternalHooks = getInternalHooks(HOOK_MARK),\n          dispatch = _getInternalHooks.dispatch;\n\n      var value = _this.getValue();\n\n      var mergedGetValueProps = getValueProps || function (val) {\n        return _defineProperty({}, valuePropName, val);\n      }; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n      var originTriggerFunc = childProps[trigger];\n\n      var control = _objectSpread(_objectSpread({}, childProps), mergedGetValueProps(value)); // Add trigger\n\n\n      control[trigger] = function () {\n        // Mark as touched\n        _this.touched = true;\n        _this.dirty = true;\n\n        _this.triggerMetaEvent();\n\n        var newValue;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        if (getValueFromEvent) {\n          newValue = getValueFromEvent.apply(void 0, args);\n        } else {\n          newValue = defaultGetValueFromEvent.apply(void 0, [valuePropName].concat(args));\n        }\n\n        if (normalize) {\n          newValue = normalize(newValue, value, getFieldsValue(true));\n        }\n\n        dispatch({\n          type: 'updateValue',\n          namePath: namePath,\n          value: newValue\n        });\n\n        if (originTriggerFunc) {\n          originTriggerFunc.apply(void 0, args);\n        }\n      }; // Add validateTrigger\n\n\n      var validateTriggerList = toArray(mergedValidateTrigger || []);\n      validateTriggerList.forEach(function (triggerName) {\n        // Wrap additional function of component, so that we can get latest value from store\n        var originTrigger = control[triggerName];\n\n        control[triggerName] = function () {\n          if (originTrigger) {\n            originTrigger.apply(void 0, arguments);\n          } // Always use latest rules\n\n\n          var rules = _this.props.rules;\n\n          if (rules && rules.length) {\n            // We dispatch validate to root,\n            // since it will update related data with other field with same name\n            dispatch({\n              type: 'validateField',\n              namePath: namePath,\n              triggerName: triggerName\n            });\n          }\n        };\n      });\n      return control;\n    };\n\n    if (props.fieldContext) {\n      var getInternalHooks = props.fieldContext.getInternalHooks;\n\n      var _getInternalHooks2 = getInternalHooks(HOOK_MARK),\n          initEntityValue = _getInternalHooks2.initEntityValue;\n\n      initEntityValue(_assertThisInitialized(_this));\n    }\n\n    return _this;\n  }\n\n  _createClass(Field, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          shouldUpdate = _this$props7.shouldUpdate,\n          fieldContext = _this$props7.fieldContext;\n      this.mounted = true; // Register on init\n\n      if (fieldContext) {\n        var getInternalHooks = fieldContext.getInternalHooks;\n\n        var _getInternalHooks3 = getInternalHooks(HOOK_MARK),\n            registerField = _getInternalHooks3.registerField;\n\n        this.cancelRegisterFunc = registerField(this);\n      } // One more render for component in case fields not ready\n\n\n      if (shouldUpdate === true) {\n        this.reRender();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.cancelRegister();\n      this.triggerMetaEvent(true);\n      this.mounted = false;\n    }\n  }, {\n    key: \"reRender\",\n    value: function reRender() {\n      if (!this.mounted) return;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var resetCount = this.state.resetCount;\n      var children = this.props.children;\n\n      var _this$getOnlyChild = this.getOnlyChild(children),\n          child = _this$getOnlyChild.child,\n          isFunction = _this$getOnlyChild.isFunction; // Not need to `cloneElement` since user can handle this in render function self\n\n\n      var returnChildNode;\n\n      if (isFunction) {\n        returnChildNode = child;\n      } else if ( /*#__PURE__*/React.isValidElement(child)) {\n        returnChildNode = /*#__PURE__*/React.cloneElement(child, this.getControlled(child.props));\n      } else {\n        warning(!child, '`children` of Field is not validate ReactElement.');\n        returnChildNode = child;\n      }\n\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: resetCount\n      }, returnChildNode);\n    }\n  }]);\n\n  return Field;\n}(React.Component);\n\nField.contextType = FieldContext;\nField.defaultProps = {\n  trigger: 'onChange',\n  valuePropName: 'value'\n};\n\nfunction WrapperField(_ref5) {\n  var name = _ref5.name,\n      restProps = _objectWithoutProperties(_ref5, _excluded);\n\n  var fieldContext = React.useContext(FieldContext);\n  var namePath = name !== undefined ? getNamePath(name) : undefined;\n  var key = 'keep';\n\n  if (!restProps.isListField) {\n    key = \"_\".concat((namePath || []).join('_'));\n  } // Warning if it's a directly list field.\n  // We can still support multiple level field preserve.\n\n\n  if (process.env.NODE_ENV !== 'production' && restProps.preserve === false && restProps.isListField && namePath.length <= 1) {\n    warning(false, '`preserve` should not apply on Form.List fields.');\n  }\n\n  return /*#__PURE__*/React.createElement(Field, _extends({\n    key: key,\n    name: namePath\n  }, restProps, {\n    fieldContext: fieldContext\n  }));\n}\n\nexport default WrapperField;","map":{"version":3,"sources":["/Users/derek/MCIT/550/Project/CIS5500-Team-Project/tube-db/client/node_modules/rc-field-form/es/Field.js"],"names":["_extends","_objectWithoutProperties","_defineProperty","_objectSpread","_toConsumableArray","_classCallCheck","_createClass","_assertThisInitialized","_inherits","_createSuper","_excluded","toChildrenArray","warning","React","FieldContext","HOOK_MARK","toArray","validateRules","containsNamePath","defaultGetValueFromEvent","getNamePath","getValue","EMPTY_ERRORS","requireUpdate","shouldUpdate","prev","next","prevValue","nextValue","info","source","Field","_React$Component","_super","props","_this","call","state","resetCount","cancelRegisterFunc","mounted","touched","dirty","validatePromise","prevValidating","errors","warnings","cancelRegister","_this$props","preserve","isListField","name","_this$props2","fieldContext","_fieldContext$prefixN","prefixName","undefined","concat","getRules","_this$props3","_this$props3$rules","rules","map","rule","refresh","setState","_ref","triggerMetaEvent","destroy","onMetaChange","getMeta","onStoreChange","prevStore","namePathList","_this$props4","_this$props4$dependen","dependencies","onReset","store","namePath","curValue","namePathMatch","type","reRender","data","validating","Promise","resolve","length","dependencyList","some","dependency","relatedFields","options","currentValue","rootPromise","then","_this$props5","_this$props5$validate","validateFirst","messageVariables","_ref2","triggerName","filteredRules","filter","validateTrigger","triggerList","includes","promise","catch","e","ruleErrors","arguments","_ruleErrors$forEach","nextErrors","nextWarnings","forEach","_ref3","warningOnly","_ref3$errors","push","apply","isFieldValidating","isFieldTouched","isFieldDirty","initialValue","_fieldContext$getInte","getInternalHooks","getInitialValue","getErrors","getWarnings","isList","isPreserve","meta","getOnlyChild","children","getControlled","isFunction","childList","isValidElement","child","getFieldsValue","childProps","_this$props6","trigger","getValueFromEvent","normalize","valuePropName","getValueProps","mergedValidateTrigger","_getInternalHooks","dispatch","value","mergedGetValueProps","val","originTriggerFunc","control","newValue","_len","args","Array","_key","validateTriggerList","originTrigger","_getInternalHooks2","initEntityValue","key","componentDidMount","_this$props7","_getInternalHooks3","registerField","componentWillUnmount","forceUpdate","render","_this$getOnlyChild","returnChildNode","cloneElement","createElement","Fragment","Component","contextType","defaultProps","WrapperField","_ref5","restProps","useContext","join","process","env","NODE_ENV"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nvar _excluded = [\"name\"];\nimport toChildrenArray from \"rc-util/es/Children/toArray\";\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport FieldContext, { HOOK_MARK } from './FieldContext';\nimport { toArray } from './utils/typeUtil';\nimport { validateRules } from './utils/validateUtil';\nimport { containsNamePath, defaultGetValueFromEvent, getNamePath, getValue } from './utils/valueUtil';\nvar EMPTY_ERRORS = [];\n\nfunction requireUpdate(shouldUpdate, prev, next, prevValue, nextValue, info) {\n  if (typeof shouldUpdate === 'function') {\n    return shouldUpdate(prev, next, 'source' in info ? {\n      source: info.source\n    } : {});\n  }\n\n  return prevValue !== nextValue;\n} // We use Class instead of Hooks here since it will cost much code by using Hooks.\n\n\nvar Field = /*#__PURE__*/function (_React$Component) {\n  _inherits(Field, _React$Component);\n\n  var _super = _createSuper(Field);\n\n  /**\n   * Follow state should not management in State since it will async update by React.\n   * This makes first render of form can not get correct state value.\n   */\n\n  /**\n   * Mark when touched & validated. Currently only used for `dependencies`.\n   * Note that we do not think field with `initialValue` is dirty\n   * but this will be by `isFieldDirty` func.\n   */\n  // ============================== Subscriptions ==============================\n  function Field(props) {\n    var _this;\n\n    _classCallCheck(this, Field);\n\n    _this = _super.call(this, props); // Register on init\n\n    _this.state = {\n      resetCount: 0\n    };\n    _this.cancelRegisterFunc = null;\n    _this.mounted = false;\n    _this.touched = false;\n    _this.dirty = false;\n    _this.validatePromise = null;\n    _this.prevValidating = void 0;\n    _this.errors = EMPTY_ERRORS;\n    _this.warnings = EMPTY_ERRORS;\n\n    _this.cancelRegister = function () {\n      var _this$props = _this.props,\n          preserve = _this$props.preserve,\n          isListField = _this$props.isListField,\n          name = _this$props.name;\n\n      if (_this.cancelRegisterFunc) {\n        _this.cancelRegisterFunc(isListField, preserve, getNamePath(name));\n      }\n\n      _this.cancelRegisterFunc = null;\n    };\n\n    _this.getNamePath = function () {\n      var _this$props2 = _this.props,\n          name = _this$props2.name,\n          fieldContext = _this$props2.fieldContext;\n      var _fieldContext$prefixN = fieldContext.prefixName,\n          prefixName = _fieldContext$prefixN === void 0 ? [] : _fieldContext$prefixN;\n      return name !== undefined ? [].concat(_toConsumableArray(prefixName), _toConsumableArray(name)) : [];\n    };\n\n    _this.getRules = function () {\n      var _this$props3 = _this.props,\n          _this$props3$rules = _this$props3.rules,\n          rules = _this$props3$rules === void 0 ? [] : _this$props3$rules,\n          fieldContext = _this$props3.fieldContext;\n      return rules.map(function (rule) {\n        if (typeof rule === 'function') {\n          return rule(fieldContext);\n        }\n\n        return rule;\n      });\n    };\n\n    _this.refresh = function () {\n      if (!_this.mounted) return;\n      /**\n       * Clean up current node.\n       */\n\n      _this.setState(function (_ref) {\n        var resetCount = _ref.resetCount;\n        return {\n          resetCount: resetCount + 1\n        };\n      });\n    };\n\n    _this.triggerMetaEvent = function (destroy) {\n      var onMetaChange = _this.props.onMetaChange;\n      onMetaChange === null || onMetaChange === void 0 ? void 0 : onMetaChange(_objectSpread(_objectSpread({}, _this.getMeta()), {}, {\n        destroy: destroy\n      }));\n    };\n\n    _this.onStoreChange = function (prevStore, namePathList, info) {\n      var _this$props4 = _this.props,\n          shouldUpdate = _this$props4.shouldUpdate,\n          _this$props4$dependen = _this$props4.dependencies,\n          dependencies = _this$props4$dependen === void 0 ? [] : _this$props4$dependen,\n          onReset = _this$props4.onReset;\n      var store = info.store;\n\n      var namePath = _this.getNamePath();\n\n      var prevValue = _this.getValue(prevStore);\n\n      var curValue = _this.getValue(store);\n\n      var namePathMatch = namePathList && containsNamePath(namePathList, namePath); // `setFieldsValue` is a quick access to update related status\n\n      if (info.type === 'valueUpdate' && info.source === 'external' && prevValue !== curValue) {\n        _this.touched = true;\n        _this.dirty = true;\n        _this.validatePromise = null;\n        _this.errors = EMPTY_ERRORS;\n        _this.warnings = EMPTY_ERRORS;\n\n        _this.triggerMetaEvent();\n      }\n\n      switch (info.type) {\n        case 'reset':\n          if (!namePathList || namePathMatch) {\n            // Clean up state\n            _this.touched = false;\n            _this.dirty = false;\n            _this.validatePromise = null;\n            _this.errors = EMPTY_ERRORS;\n            _this.warnings = EMPTY_ERRORS;\n\n            _this.triggerMetaEvent();\n\n            onReset === null || onReset === void 0 ? void 0 : onReset();\n\n            _this.refresh();\n\n            return;\n          }\n\n          break;\n\n        /**\n         * In case field with `preserve = false` nest deps like:\n         * - A = 1 => show B\n         * - B = 1 => show C\n         * - Reset A, need clean B, C\n         */\n\n        case 'remove':\n          {\n            if (shouldUpdate) {\n              _this.reRender();\n\n              return;\n            }\n\n            break;\n          }\n\n        case 'setField':\n          {\n            if (namePathMatch) {\n              var data = info.data;\n\n              if ('touched' in data) {\n                _this.touched = data.touched;\n              }\n\n              if ('validating' in data && !('originRCField' in data)) {\n                _this.validatePromise = data.validating ? Promise.resolve([]) : null;\n              }\n\n              if ('errors' in data) {\n                _this.errors = data.errors || EMPTY_ERRORS;\n              }\n\n              if ('warnings' in data) {\n                _this.warnings = data.warnings || EMPTY_ERRORS;\n              }\n\n              _this.dirty = true;\n\n              _this.triggerMetaEvent();\n\n              _this.reRender();\n\n              return;\n            } // Handle update by `setField` with `shouldUpdate`\n\n\n            if (shouldUpdate && !namePath.length && requireUpdate(shouldUpdate, prevStore, store, prevValue, curValue, info)) {\n              _this.reRender();\n\n              return;\n            }\n\n            break;\n          }\n\n        case 'dependenciesUpdate':\n          {\n            /**\n             * Trigger when marked `dependencies` updated. Related fields will all update\n             */\n            var dependencyList = dependencies.map(getNamePath); // No need for `namePathMath` check and `shouldUpdate` check, since `valueUpdate` will be\n            // emitted earlier and they will work there\n            // If set it may cause unnecessary twice rerendering\n\n            if (dependencyList.some(function (dependency) {\n              return containsNamePath(info.relatedFields, dependency);\n            })) {\n              _this.reRender();\n\n              return;\n            }\n\n            break;\n          }\n\n        default:\n          // 1. If `namePath` exists in `namePathList`, means it's related value and should update\n          //      For example <List name=\"list\"><Field name={['list', 0]}></List>\n          //      If `namePathList` is [['list']] (List value update), Field should be updated\n          //      If `namePathList` is [['list', 0]] (Field value update), List shouldn't be updated\n          // 2.\n          //   2.1 If `dependencies` is set, `name` is not set and `shouldUpdate` is not set,\n          //       don't use `shouldUpdate`. `dependencies` is view as a shortcut if `shouldUpdate`\n          //       is not provided\n          //   2.2 If `shouldUpdate` provided, use customize logic to update the field\n          //       else to check if value changed\n          if (namePathMatch || (!dependencies.length || namePath.length || shouldUpdate) && requireUpdate(shouldUpdate, prevStore, store, prevValue, curValue, info)) {\n            _this.reRender();\n\n            return;\n          }\n\n          break;\n      }\n\n      if (shouldUpdate === true) {\n        _this.reRender();\n      }\n    };\n\n    _this.validateRules = function (options) {\n      // We should fixed namePath & value to avoid developer change then by form function\n      var namePath = _this.getNamePath();\n\n      var currentValue = _this.getValue(); // Force change to async to avoid rule OOD under renderProps field\n\n\n      var rootPromise = Promise.resolve().then(function () {\n        if (!_this.mounted) {\n          return [];\n        }\n\n        var _this$props5 = _this.props,\n            _this$props5$validate = _this$props5.validateFirst,\n            validateFirst = _this$props5$validate === void 0 ? false : _this$props5$validate,\n            messageVariables = _this$props5.messageVariables;\n\n        var _ref2 = options || {},\n            triggerName = _ref2.triggerName;\n\n        var filteredRules = _this.getRules();\n\n        if (triggerName) {\n          filteredRules = filteredRules.filter(function (rule) {\n            var validateTrigger = rule.validateTrigger;\n\n            if (!validateTrigger) {\n              return true;\n            }\n\n            var triggerList = toArray(validateTrigger);\n            return triggerList.includes(triggerName);\n          });\n        }\n\n        var promise = validateRules(namePath, currentValue, filteredRules, options, validateFirst, messageVariables);\n        promise.catch(function (e) {\n          return e;\n        }).then(function () {\n          var ruleErrors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : EMPTY_ERRORS;\n\n          if (_this.validatePromise === rootPromise) {\n            var _ruleErrors$forEach;\n\n            _this.validatePromise = null; // Get errors & warnings\n\n            var nextErrors = [];\n            var nextWarnings = [];\n            (_ruleErrors$forEach = ruleErrors.forEach) === null || _ruleErrors$forEach === void 0 ? void 0 : _ruleErrors$forEach.call(ruleErrors, function (_ref3) {\n              var warningOnly = _ref3.rule.warningOnly,\n                  _ref3$errors = _ref3.errors,\n                  errors = _ref3$errors === void 0 ? EMPTY_ERRORS : _ref3$errors;\n\n              if (warningOnly) {\n                nextWarnings.push.apply(nextWarnings, _toConsumableArray(errors));\n              } else {\n                nextErrors.push.apply(nextErrors, _toConsumableArray(errors));\n              }\n            });\n            _this.errors = nextErrors;\n            _this.warnings = nextWarnings;\n\n            _this.triggerMetaEvent();\n\n            _this.reRender();\n          }\n        });\n        return promise;\n      });\n      _this.validatePromise = rootPromise;\n      _this.dirty = true;\n      _this.errors = EMPTY_ERRORS;\n      _this.warnings = EMPTY_ERRORS;\n\n      _this.triggerMetaEvent(); // Force trigger re-render since we need sync renderProps with new meta\n\n\n      _this.reRender();\n\n      return rootPromise;\n    };\n\n    _this.isFieldValidating = function () {\n      return !!_this.validatePromise;\n    };\n\n    _this.isFieldTouched = function () {\n      return _this.touched;\n    };\n\n    _this.isFieldDirty = function () {\n      // Touched or validate or has initialValue\n      if (_this.dirty || _this.props.initialValue !== undefined) {\n        return true;\n      } // Form set initialValue\n\n\n      var fieldContext = _this.props.fieldContext;\n\n      var _fieldContext$getInte = fieldContext.getInternalHooks(HOOK_MARK),\n          getInitialValue = _fieldContext$getInte.getInitialValue;\n\n      if (getInitialValue(_this.getNamePath()) !== undefined) {\n        return true;\n      }\n\n      return false;\n    };\n\n    _this.getErrors = function () {\n      return _this.errors;\n    };\n\n    _this.getWarnings = function () {\n      return _this.warnings;\n    };\n\n    _this.isListField = function () {\n      return _this.props.isListField;\n    };\n\n    _this.isList = function () {\n      return _this.props.isList;\n    };\n\n    _this.isPreserve = function () {\n      return _this.props.preserve;\n    };\n\n    _this.getMeta = function () {\n      // Make error & validating in cache to save perf\n      _this.prevValidating = _this.isFieldValidating();\n      var meta = {\n        touched: _this.isFieldTouched(),\n        validating: _this.prevValidating,\n        errors: _this.errors,\n        warnings: _this.warnings,\n        name: _this.getNamePath()\n      };\n      return meta;\n    };\n\n    _this.getOnlyChild = function (children) {\n      // Support render props\n      if (typeof children === 'function') {\n        var meta = _this.getMeta();\n\n        return _objectSpread(_objectSpread({}, _this.getOnlyChild(children(_this.getControlled(), meta, _this.props.fieldContext))), {}, {\n          isFunction: true\n        });\n      } // Filed element only\n\n\n      var childList = toChildrenArray(children);\n\n      if (childList.length !== 1 || ! /*#__PURE__*/React.isValidElement(childList[0])) {\n        return {\n          child: childList,\n          isFunction: false\n        };\n      }\n\n      return {\n        child: childList[0],\n        isFunction: false\n      };\n    };\n\n    _this.getValue = function (store) {\n      var getFieldsValue = _this.props.fieldContext.getFieldsValue;\n\n      var namePath = _this.getNamePath();\n\n      return getValue(store || getFieldsValue(true), namePath);\n    };\n\n    _this.getControlled = function () {\n      var childProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _this$props6 = _this.props,\n          trigger = _this$props6.trigger,\n          validateTrigger = _this$props6.validateTrigger,\n          getValueFromEvent = _this$props6.getValueFromEvent,\n          normalize = _this$props6.normalize,\n          valuePropName = _this$props6.valuePropName,\n          getValueProps = _this$props6.getValueProps,\n          fieldContext = _this$props6.fieldContext;\n      var mergedValidateTrigger = validateTrigger !== undefined ? validateTrigger : fieldContext.validateTrigger;\n\n      var namePath = _this.getNamePath();\n\n      var getInternalHooks = fieldContext.getInternalHooks,\n          getFieldsValue = fieldContext.getFieldsValue;\n\n      var _getInternalHooks = getInternalHooks(HOOK_MARK),\n          dispatch = _getInternalHooks.dispatch;\n\n      var value = _this.getValue();\n\n      var mergedGetValueProps = getValueProps || function (val) {\n        return _defineProperty({}, valuePropName, val);\n      }; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n      var originTriggerFunc = childProps[trigger];\n\n      var control = _objectSpread(_objectSpread({}, childProps), mergedGetValueProps(value)); // Add trigger\n\n\n      control[trigger] = function () {\n        // Mark as touched\n        _this.touched = true;\n        _this.dirty = true;\n\n        _this.triggerMetaEvent();\n\n        var newValue;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        if (getValueFromEvent) {\n          newValue = getValueFromEvent.apply(void 0, args);\n        } else {\n          newValue = defaultGetValueFromEvent.apply(void 0, [valuePropName].concat(args));\n        }\n\n        if (normalize) {\n          newValue = normalize(newValue, value, getFieldsValue(true));\n        }\n\n        dispatch({\n          type: 'updateValue',\n          namePath: namePath,\n          value: newValue\n        });\n\n        if (originTriggerFunc) {\n          originTriggerFunc.apply(void 0, args);\n        }\n      }; // Add validateTrigger\n\n\n      var validateTriggerList = toArray(mergedValidateTrigger || []);\n      validateTriggerList.forEach(function (triggerName) {\n        // Wrap additional function of component, so that we can get latest value from store\n        var originTrigger = control[triggerName];\n\n        control[triggerName] = function () {\n          if (originTrigger) {\n            originTrigger.apply(void 0, arguments);\n          } // Always use latest rules\n\n\n          var rules = _this.props.rules;\n\n          if (rules && rules.length) {\n            // We dispatch validate to root,\n            // since it will update related data with other field with same name\n            dispatch({\n              type: 'validateField',\n              namePath: namePath,\n              triggerName: triggerName\n            });\n          }\n        };\n      });\n      return control;\n    };\n\n    if (props.fieldContext) {\n      var getInternalHooks = props.fieldContext.getInternalHooks;\n\n      var _getInternalHooks2 = getInternalHooks(HOOK_MARK),\n          initEntityValue = _getInternalHooks2.initEntityValue;\n\n      initEntityValue(_assertThisInitialized(_this));\n    }\n\n    return _this;\n  }\n\n  _createClass(Field, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          shouldUpdate = _this$props7.shouldUpdate,\n          fieldContext = _this$props7.fieldContext;\n      this.mounted = true; // Register on init\n\n      if (fieldContext) {\n        var getInternalHooks = fieldContext.getInternalHooks;\n\n        var _getInternalHooks3 = getInternalHooks(HOOK_MARK),\n            registerField = _getInternalHooks3.registerField;\n\n        this.cancelRegisterFunc = registerField(this);\n      } // One more render for component in case fields not ready\n\n\n      if (shouldUpdate === true) {\n        this.reRender();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.cancelRegister();\n      this.triggerMetaEvent(true);\n      this.mounted = false;\n    }\n  }, {\n    key: \"reRender\",\n    value: function reRender() {\n      if (!this.mounted) return;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var resetCount = this.state.resetCount;\n      var children = this.props.children;\n\n      var _this$getOnlyChild = this.getOnlyChild(children),\n          child = _this$getOnlyChild.child,\n          isFunction = _this$getOnlyChild.isFunction; // Not need to `cloneElement` since user can handle this in render function self\n\n\n      var returnChildNode;\n\n      if (isFunction) {\n        returnChildNode = child;\n      } else if ( /*#__PURE__*/React.isValidElement(child)) {\n        returnChildNode = /*#__PURE__*/React.cloneElement(child, this.getControlled(child.props));\n      } else {\n        warning(!child, '`children` of Field is not validate ReactElement.');\n        returnChildNode = child;\n      }\n\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: resetCount\n      }, returnChildNode);\n    }\n  }]);\n\n  return Field;\n}(React.Component);\n\nField.contextType = FieldContext;\nField.defaultProps = {\n  trigger: 'onChange',\n  valuePropName: 'value'\n};\n\nfunction WrapperField(_ref5) {\n  var name = _ref5.name,\n      restProps = _objectWithoutProperties(_ref5, _excluded);\n\n  var fieldContext = React.useContext(FieldContext);\n  var namePath = name !== undefined ? getNamePath(name) : undefined;\n  var key = 'keep';\n\n  if (!restProps.isListField) {\n    key = \"_\".concat((namePath || []).join('_'));\n  } // Warning if it's a directly list field.\n  // We can still support multiple level field preserve.\n\n\n  if (process.env.NODE_ENV !== 'production' && restProps.preserve === false && restProps.isListField && namePath.length <= 1) {\n    warning(false, '`preserve` should not apply on Form.List fields.');\n  }\n\n  return /*#__PURE__*/React.createElement(Field, _extends({\n    key: key,\n    name: namePath\n  }, restProps, {\n    fieldContext: fieldContext\n  }));\n}\n\nexport default WrapperField;"]},"metadata":{},"sourceType":"module"}