{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { ConfigContext } from '../../config-provider';\nimport LocaleReceiver from '../../locale-provider/LocaleReceiver';\nimport defaultLocale from '../../locale/default';\nimport ConfirmDialog from '../ConfirmDialog';\n\nvar HookModal = function HookModal(_ref, ref) {\n  var afterClose = _ref.afterClose,\n      config = _ref.config;\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  var _React$useState3 = React.useState(config),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      innerConfig = _React$useState4[0],\n      setInnerConfig = _React$useState4[1];\n\n  var _React$useContext = React.useContext(ConfigContext),\n      direction = _React$useContext.direction,\n      getPrefixCls = _React$useContext.getPrefixCls;\n\n  var prefixCls = getPrefixCls('modal');\n  var rootPrefixCls = getPrefixCls();\n\n  var close = function close() {\n    setVisible(false);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var triggerCancel = args.some(function (param) {\n      return param && param.triggerCancel;\n    });\n\n    if (innerConfig.onCancel && triggerCancel) {\n      innerConfig.onCancel.apply(innerConfig, [function () {}].concat(_toConsumableArray(args.slice(1))));\n    }\n  };\n\n  React.useImperativeHandle(ref, function () {\n    return {\n      destroy: close,\n      update: function update(newConfig) {\n        setInnerConfig(function (originConfig) {\n          return _extends(_extends({}, originConfig), newConfig);\n        });\n      }\n    };\n  });\n  return /*#__PURE__*/React.createElement(LocaleReceiver, {\n    componentName: \"Modal\",\n    defaultLocale: defaultLocale.Modal\n  }, function (modalLocale) {\n    return /*#__PURE__*/React.createElement(ConfirmDialog, _extends({\n      prefixCls: prefixCls,\n      rootPrefixCls: rootPrefixCls\n    }, innerConfig, {\n      close: close,\n      visible: visible,\n      afterClose: afterClose,\n      okText: innerConfig.okText || (innerConfig.okCancel ? modalLocale.okText : modalLocale.justOkText),\n      direction: direction,\n      cancelText: innerConfig.cancelText || modalLocale.cancelText\n    }));\n  });\n};\n\nexport default /*#__PURE__*/React.forwardRef(HookModal);","map":{"version":3,"sources":["/Users/derek/MCIT/550/Project/CIS5500-Team-Project/tube-db/client/node_modules/antd/es/modal/useModal/HookModal.js"],"names":["_extends","_toConsumableArray","_slicedToArray","React","ConfigContext","LocaleReceiver","defaultLocale","ConfirmDialog","HookModal","_ref","ref","afterClose","config","_React$useState","useState","_React$useState2","visible","setVisible","_React$useState3","_React$useState4","innerConfig","setInnerConfig","_React$useContext","useContext","direction","getPrefixCls","prefixCls","rootPrefixCls","close","_len","arguments","length","args","Array","_key","triggerCancel","some","param","onCancel","apply","concat","slice","useImperativeHandle","destroy","update","newConfig","originConfig","createElement","componentName","Modal","modalLocale","okText","okCancel","justOkText","cancelText","forwardRef"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { ConfigContext } from '../../config-provider';\nimport LocaleReceiver from '../../locale-provider/LocaleReceiver';\nimport defaultLocale from '../../locale/default';\nimport ConfirmDialog from '../ConfirmDialog';\n\nvar HookModal = function HookModal(_ref, ref) {\n  var afterClose = _ref.afterClose,\n      config = _ref.config;\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  var _React$useState3 = React.useState(config),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      innerConfig = _React$useState4[0],\n      setInnerConfig = _React$useState4[1];\n\n  var _React$useContext = React.useContext(ConfigContext),\n      direction = _React$useContext.direction,\n      getPrefixCls = _React$useContext.getPrefixCls;\n\n  var prefixCls = getPrefixCls('modal');\n  var rootPrefixCls = getPrefixCls();\n\n  var close = function close() {\n    setVisible(false);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var triggerCancel = args.some(function (param) {\n      return param && param.triggerCancel;\n    });\n\n    if (innerConfig.onCancel && triggerCancel) {\n      innerConfig.onCancel.apply(innerConfig, [function () {}].concat(_toConsumableArray(args.slice(1))));\n    }\n  };\n\n  React.useImperativeHandle(ref, function () {\n    return {\n      destroy: close,\n      update: function update(newConfig) {\n        setInnerConfig(function (originConfig) {\n          return _extends(_extends({}, originConfig), newConfig);\n        });\n      }\n    };\n  });\n  return /*#__PURE__*/React.createElement(LocaleReceiver, {\n    componentName: \"Modal\",\n    defaultLocale: defaultLocale.Modal\n  }, function (modalLocale) {\n    return /*#__PURE__*/React.createElement(ConfirmDialog, _extends({\n      prefixCls: prefixCls,\n      rootPrefixCls: rootPrefixCls\n    }, innerConfig, {\n      close: close,\n      visible: visible,\n      afterClose: afterClose,\n      okText: innerConfig.okText || (innerConfig.okCancel ? modalLocale.okText : modalLocale.justOkText),\n      direction: direction,\n      cancelText: innerConfig.cancelText || modalLocale.cancelText\n    }));\n  });\n};\n\nexport default /*#__PURE__*/React.forwardRef(HookModal);"]},"metadata":{},"sourceType":"module"}